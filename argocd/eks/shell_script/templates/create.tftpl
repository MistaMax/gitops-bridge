#!/bin/bash

set -x
aws eks --region ${region} update-kubeconfig --name ${cluster_name} --kubeconfig /tmp/${cluster_name}
export KUBECONFIG=/tmp/${cluster_name}

helm repo add argo https://argoproj.github.io/argo-helm
helm install argo-cd argo/argo-cd --version "5.36.4" --namespace argocd --create-namespace
# bootstrap app (App or Apps)
kubectl apply -f https://raw.githubusercontent.com/csantanapr/control-plane-eks/main/argocd-app.yaml

kubectl apply -f - <<EOF
apiVersion: v1
kind: Secret
metadata:
  name: workshop
  namespace: argocd
  annotations:
    foo: bar
    cluster_name: ${cluster_name}
    region: ${region}
    cert_manager_iam_role_arn: ${cert_manager_iam_role_arn}
    cert_manager_namespace: ${cert_manager_namespace}
    cluster_autoscaler_iam_role_arn: ${cluster_autoscaler_iam_role_arn}
    cluster_autoscaler_namespace: ${cluster_autoscaler_namespace}
    cluster_autoscaler_sa: ${cluster_autoscaler_sa}
    cluster_autoscaler_image_tag: ${cluster_autoscaler_image_tag}
    aws_cloudwatch_metrics_iam_role_arn: ${aws_cloudwatch_metrics_iam_role_arn}
    aws_cloudwatch_metrics_namespace: ${aws_cloudwatch_metrics_namespace}
    aws_cloudwatch_metrics_sa: ${aws_cloudwatch_metrics_sa}
  labels:
    argocd.argoproj.io/secret-type: cluster
type: Opaque
stringData:
  name: workshop
  server: https://kubernetes.default.svc
  config: |
    {
      "tlsClientConfig": {
        "insecure": false
      }
    }
EOF


echo "{\"London\": \"$(curl wttr.in/London?format="%l:+%c+%t")\"}"
